[package]
name = "unzip-array-of-tuple"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
description = "This package currently provides one function that takes in an array containing tuples of two types; the function then returns two arrays, the first containing all the first elements of the tuples, and the second array containing the second elements of the tuples.\nThis functionality is available in iterators through unzip, but unzip can only return collections which implement Extend; which primitive arrays do not. Therefore, unzip works fine for Vec or other dynamic types, but not for simple, beautiful arrays, with lengths known at compiletime.\nMy implementation is hopefully quite efficient, as it just moves data around, without using too much costly abstractions like std::array::from_fn.\nThis crate has 4 tests that I think cover basically everything; still it could be unsound.."
authors = ["Karl Hedberg"]
keywords = ["array", "utility", "unzip", "tuple", "lightweight"]
catagories = ["data-structures", "rust-patterns"]
readme = "README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html



[dependencies]
